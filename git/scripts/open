#!/usr/bin/env bash
function _build_github_url() {
    local SITE USER REPO HASH FILEPATH URL
    read -r SITE USER REPO HASH FILEPATH <<< "${@}"
    URL="https://www.${SITE}/${USER}/${REPO}/tree/${HASH}"
    [[ -z ${FILEPATH} ]] && echo "${URL}" || echo "$URL/$FILEPATH"
    return 0
}

function _build_bitbucket_url() {
    local SITE USER REPO HASH FILEPATH URL
    read -r SITE USER REPO HASH FILEPATH <<< "${@}"
    URL="https://www.${SITE}/${USER}/${REPO}/src/${HASH}"
    [[ -z ${FILEPATH} ]] && echo "${URL}" || echo "${URL}/${FILEPATH}"
    return 0
}

function build_url() {
    local REMOTE FIELDS HASH FILEPATH SITE USER REPO ARGS

    # Get remote repository
    REMOTE="$(git config --get remote.origin.url)"
    if [[ -z "${REMOTE}" ]]; then
      echo "No remote URL found. Please check your git configuration."
      return 1
    fi

    # Get fields we need from remote
    FIELDS=$(echo "${REMOTE}" | sed 's/git@\(.*\):\(.*\)\/\([^\.]*\)\(\..*\)\{0,1\}/\1 \2 \3/')
    read -r SITE USER REPO <<< "${FIELDS}"

    # Get git hash
    HASH=$(git rev-parse HEAD)

    # Get path
    FILEPATH=$1
    # TODO: Expand this to support being called from anywhere other than repo root

    # Build the URL based on the site
    ARGS=("${SITE}" "${USER}" "${REPO}" "${HASH}" "${FILEPATH}")
    if [[ "${SITE}" = "github.com" ]]; then
        _build_github_url "${ARGS[@]}"
        return 0
    elif [[ "${SITE}" = "bitbucket.org" ]]; then
        _build_bitbucket_url "${ARGS[@]}"
        return 0
    fi
    echo "Unsupported site: ${SITE}"
    return 1
}

# Open the URL in the default browser
URL=$(build_url "$1")
$BROWSER "${URL}"
